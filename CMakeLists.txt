cmake_minimum_required(VERSION 2.8.12.2)
project(openmp_tutorial)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_C_STANDARD 11)
#set(CMAKE_C_COMPILER "gcc")
set(CMAKE_C_COMPILER "/usr/bin/gcc")
set(CMAKE_CXX_COMPILER "/usr/bin/g++")
set(CMAKE_BUILD_TYPE "Debug")

set(CMAKE_C_FLAGS "-fopenmp -g ${CMAKE_C_FLAGS}")

add_executable(active_level src/runtime/active_level.c)

add_executable(thread_limit src/runtime/thread_limit.c)
add_executable(section src/runtime/section.c)

add_executable(example01 src/sections/example01.c)
add_executable(critical src/sync/critical.c)
add_executable(for src/directives/for.c)
add_executable(single src/directives/single.c)
add_executable(single01 src/sync/single.c)
add_executable(order src/directives/order.c)
add_executable(flush src/directives/flush.c)
add_executable(omp_get_wtime src/runtime/omp_get_wtime.c)
add_executable(omp_in_parallel src/runtime/omp_in_parallel.c)
add_executable(omp_get_active_level src/runtime/omp_get_active_level.c)
add_executable(omp_set_max_active_levels src/runtime/omp_set_max_active_levels.c)
add_executable(omp_get_level src/runtime/omp_get_level.c)
add_executable(omp_get_ancestor_thread_num src/runtime/omp_get_ancestor_thread_num.c)
add_executable(omp_get_thread_num src/runtime/omp_get_thread_num.c)
add_executable(omp_get_team_size src/runtime/omp_get_team_size.c)
add_executable(omp_get_num_procs src/runtime/omp_get_num_procs.c)
add_executable(omp_in_final src/runtime/omp_in_final.c)
add_executable(omp_get_nested src/runtime/omp_get_nested.c)
add_executable(stack_size src/environment/stack_size.c)
add_executable(omp_init_lock src/runtime/omp_init_lock.c)
add_executable(error_nested src/runtime/error_nested.c)
add_executable(nested_lock src/runtime/nested_lock.c)
add_executable(hint src/runtime/hint.c)
add_executable(alias_demo src/runtime/alias_demo.c)
add_executable(cancel src/environment/cancel.c)
add_executable(device src/environment/device.c)
add_executable(dynamic src/environment/dynamic.c)
add_executable(dynamic01 src/environment/dynamic01.c)

add_executable(omp_set_num_teams src/environment/omp_set_num_teams.c)
add_executable(wait_policy src/environment/wait_policy.c)
add_executable(OMP_TEAMS_THREAD_LIMIT src/environment/OMP_TEAMS_THREAD_LIMIT.c)
add_executable(die_loop src/environment/die_loop.c)
add_executable(barrier src/sync/barrier.c)
add_executable(atomic src/sync/atomic.c)
add_executable(aotmic01 src/sync/aotmic01.c)
add_executable(atomic02 src/sync/atomic02.c)
add_executable(atomic03 src/sync/atomic03.c)
add_executable(atomic04 src/sync/atomic04.c)
add_executable(parallel src/sync/parallel.c)
add_executable(no_wait src/sync/no_wait.c)
add_executable(no_wait02 src/sync/no_wait02.c)
add_executable(no_wait03 src/sync/no_wait03.c)
add_executable(no_wait04 src/sync/no_wait04.c)
add_executable(no_wait_sections01 src/sync/no_wait_sections01.c)
add_executable(no_wait_section02 src/sync/no_wait_section02.c)
add_executable(barrier01 src/sync/barrier01.c)
add_executable(barrier03 src/sync/barrier03.c)
add_executable(barrier02 src/sync/barrier02.c)
add_executable(parallel01 src/sync/parallel01.c)
add_executable(critical04 src/sync/critical04.c)
add_executable(critical05 src/sync/critical05.c)
add_executable(thread_local src/sync/thread_local.c)
add_executable(master src/sync/master.c)
add_executable(ordered src/sync/ordered.c)
add_executable(atomic01 src/aotmic/atomic01.c)
add_executable(atomic022 src/aotmic/atomic02.c)
add_executable(atomic033 src/aotmic/atomic03.c)
add_executable(atomic044 src/aotmic/atomic04.c)
add_executable(_atomic05 src/aotmic/_atomic05.c)
add_executable(aotmic05 src/aotmic/aotmic05.c)
add_executable(numa01 src/numa/numa01.c)
add_executable(numa02 src/numa/numa02.c)
add_executable(numa03 src/numa/numa03.c)
add_executable(task01 src/task/task01.c)
add_executable(principle_parallel src/principle/principle_parallel.c)
add_executable(rewrite_parallel src/principle/rewrite_parallel.c)
add_executable(principle_sync01 src/principle/principle_sync01.c)
add_executable(principle_flush src/principle/principle_flush.c)
add_executable(principle_master src/principle/principle_master.c)
add_executable(principle_critilcal01 src/principle/principle_critilcal01.c)
add_executable(principle_atomic src/principle/principle_atomic.c)
add_executable(principle_barrier src/principle/principle_barrier.c)
add_executable(principle_nowait src/principle/principle_nowait.c)
add_executable(principle_single src/principle/principle_single.c)
add_executable(principle_copyprivate src/principle/principle_copyprivate.c)
add_executable(principle_ordered src/principle/principle_ordered.c)
add_executable(principle_for src/principle/principle_for.c)
add_executable(_sync01 src/aotmic/_sync01.cpp)
add_executable(principle_benchmark src/principle/principle_benchmark.c)
add_executable(principle_guided src/principle/principle_guided.c)
add_executable(asm01 src/principle/asm01.c)
add_executable(guided src/schedule/guided.c)
add_executable(task02 src/task/task02.c)
add_executable(test src/asm/test.c)
add_executable(nested src/task/nested.c)